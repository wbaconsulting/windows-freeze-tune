name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  lint-and-package:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Lint (fail only on errors, print all)
        shell: pwsh
        run: |
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
          if (-not (Get-Module -ListAvailable PSScriptAnalyzer)) {
            Install-Module PSScriptAnalyzer -Scope CurrentUser -Force
          }
          $results = Invoke-ScriptAnalyzer -Path . -Recurse
          $results | Format-Table RuleName,Severity,ScriptName,Line,Message -AutoSize
          $errors = $results | Where-Object Severity -eq 'Error'
          if ($errors) { Write-Error "PSScriptAnalyzer found $($errors.Count) error(s)."; exit 1 }

      - name: Package artifact (zip)
        shell: pwsh
        run: |
          Compress-Archive -Path scripts/WindowsFreezeTune.ps1, README.md, LICENSE `
            -DestinationPath windows-freeze-tune.zip -Force

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-freeze-tune
          path: windows-freeze-tune.zip
